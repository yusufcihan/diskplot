<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ask_continue" xml:space="preserve">
    <value>Do you want to continue?</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="customicon" xml:space="preserve">
    <value>Custom Icon</value>
  </data>
  <data name="debuginfo" xml:space="preserve">
    <value>Enable Debugging</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="delete_fresh" xml:space="preserve">
    <value>All plots, settings and others will be deleted. This option won't delete any files or folders in your disk.</value>
  </data>
  <data name="delete_plot" xml:space="preserve">
    <value>All files in this plot WILL BE DELETED FOREVER. You can't undo this action.</value>
  </data>
  <data name="delete_plot_title" xml:space="preserve">
    <value>Delete Plot</value>
  </data>
  <data name="delete_uninstall" xml:space="preserve">
    <value>All plots, settings and others will be deleted. This will uninstall DiskPlot, but it won't affect your files. Folders will be stay in your disk.</value>
  </data>
  <data name="directory" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="diskplot_current" xml:space="preserve">
    <value>Current Folder</value>
  </data>
  <data name="diskplot_main" xml:space="preserve">
    <value>Main Folder</value>
  </data>
  <data name="documents" xml:space="preserve">
    <value>Documents</value>
  </data>
  <data name="error_cantdelete" xml:space="preserve">
    <value>This icon is used by DiskPlot and can't be deleted.</value>
  </data>
  <data name="error_icon" xml:space="preserve">
    <value>This icon already added to icon library.</value>
  </data>
  <data name="error_launch" xml:space="preserve">
    <value>There is a problem with DiskPlot folder. Please make sure to don't delete DiskPlot folder.</value>
  </data>
  <data name="error_launch_title" xml:space="preserve">
    <value>Launch Error</value>
  </data>
  <data name="error_lost" xml:space="preserve">
    <value>This plot has been lost, plot folder may be moved or deleted from your disk. Please take back that folder to DiskPlot folder with same name. Or delete this plot completely.</value>
  </data>
  <data name="error_lost_title" xml:space="preserve">
    <value>Disconnected Plot</value>
  </data>
  <data name="error_name" xml:space="preserve">
    <value>A plot name is required.</value>
  </data>
  <data name="error_same" xml:space="preserve">
    <value>Plot directory and name can't be same with other plots.</value>
  </data>
  <data name="error_system" xml:space="preserve">
    <value>This plot name is using by DiskPlot itself.</value>
  </data>
  <data name="error_unexpected" xml:space="preserve">
    <value>Unexpected error. Normally, DiskPlot detects common problems, but now DiskPlot have problems to detect it. Please try again later. Error details can be found below:</value>
  </data>
  <data name="fresh_reset" xml:space="preserve">
    <value>Fresh Reset</value>
  </data>
  <data name="icons" xml:space="preserve">
    <value>Icons</value>
  </data>
  <data name="limit" xml:space="preserve">
    <value>Limit</value>
  </data>
  <data name="limitinfo" xml:space="preserve">
    <value>Add limit to your plot if you want to comparise the other plots, or to track size usage. You can still exceed the limit with files. Also you don't need to set a limit.</value>
  </data>
  <data name="lost" xml:space="preserve">
    <value>This plot has been lost.</value>
  </data>
  <data name="lost_lbl" xml:space="preserve">
    <value>lost</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="open_lbl" xml:space="preserve">
    <value>open</value>
  </data>
  <data name="performance" xml:space="preserve">
    <value>Performance Mode</value>
  </data>
  <data name="plot" xml:space="preserve">
    <value>Plot</value>
  </data>
  <data name="plots" xml:space="preserve">
    <value>Plots</value>
  </data>
  <data name="refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="uninstall" xml:space="preserve">
    <value>Uninstall DiskPlot</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="warning_fresh" xml:space="preserve">
    <value>You won't able to create plots with the same name of current plot names since directories won't be deleted.</value>
  </data>
  <data name="warning_uninstall" xml:space="preserve">
    <value>DiskPlot will be removed from this drive. Your plots and files will stay in your disk, but you need to install DiskPlot again to manage them.</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Organize your files.</value>
  </data>
  <data name="welcome1" xml:space="preserve">
    <value>DiskPlot allows organizing your files by creating virtual plots in your disk. Also, you can attach an icon and name to your plots.</value>
  </data>
  <data name="welcome2" xml:space="preserve">
    <value>You can create as much plot as you want. And your plots are fast and safe because they are not hardware based.</value>
  </data>
  <data name="welcome3" xml:space="preserve">
    <value>Your disk, your rules.</value>
  </data>
  <data name="welcome4" xml:space="preserve">
    <value>Your homeworks, documents, photos... may take up more space than you think. Specify a plot size to measure how much space your plot uses. In this way, track the plot usage with a progress bar.</value>
  </data>
  <data name="yourdocuments" xml:space="preserve">
    <value>Your documents</value>
  </data>
  <data name="yourphotos" xml:space="preserve">
    <value>Your photos</value>
  </data>
</root>